<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.testConfig.db.mybatis.mapper.biz.PlaceHourStatisticsMapper">
  <resultMap id="BaseResultMap" type="com.example.testConfig.db.mybatis.model.biz.PlaceHourStatistics">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="agent_id" jdbcType="VARCHAR" property="agentId" />
    <result column="project_id" jdbcType="VARCHAR" property="projectId" />
    <result column="place_id" jdbcType="VARCHAR" property="placeId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="segment1" jdbcType="INTEGER" property="segment1" />
    <result column="segment2" jdbcType="INTEGER" property="segment2" />
    <result column="segment3" jdbcType="INTEGER" property="segment3" />
    <result column="segment4" jdbcType="INTEGER" property="segment4" />
    <result column="segment5" jdbcType="INTEGER" property="segment5" />
    <result column="segment6" jdbcType="INTEGER" property="segment6" />
    <result column="segment7" jdbcType="INTEGER" property="segment7" />
    <result column="segment8" jdbcType="INTEGER" property="segment8" />
    <result column="segment9" jdbcType="INTEGER" property="segment9" />
    <result column="segment10" jdbcType="INTEGER" property="segment10" />
    <result column="segment11" jdbcType="INTEGER" property="segment11" />
    <result column="segment12" jdbcType="INTEGER" property="segment12" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, agent_id, project_id, place_id, type, segment1, segment2, segment3, segment4, 
    segment5, segment6, segment7, segment8, segment9, segment10, segment11, segment12
  </sql>
  <select id="selectByExample" parameterType="com.example.testConfig.db.mybatis.model.biz.PlaceHourStatisticsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from place_hour_statistics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from place_hour_statistics
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from place_hour_statistics
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.testConfig.db.mybatis.model.biz.PlaceHourStatisticsExample">
    delete from place_hour_statistics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.testConfig.db.mybatis.model.biz.PlaceHourStatistics">
    insert into place_hour_statistics (id, agent_id, project_id, 
      place_id, type, segment1, 
      segment2, segment3, segment4, 
      segment5, segment6, segment7, 
      segment8, segment9, segment10, 
      segment11, segment12)
    values (#{id,jdbcType=VARCHAR}, #{agentId,jdbcType=VARCHAR}, #{projectId,jdbcType=VARCHAR}, 
      #{placeId,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{segment1,jdbcType=INTEGER}, 
      #{segment2,jdbcType=INTEGER}, #{segment3,jdbcType=INTEGER}, #{segment4,jdbcType=INTEGER}, 
      #{segment5,jdbcType=INTEGER}, #{segment6,jdbcType=INTEGER}, #{segment7,jdbcType=INTEGER}, 
      #{segment8,jdbcType=INTEGER}, #{segment9,jdbcType=INTEGER}, #{segment10,jdbcType=INTEGER}, 
      #{segment11,jdbcType=INTEGER}, #{segment12,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.testConfig.db.mybatis.model.biz.PlaceHourStatistics">
    insert into place_hour_statistics
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="agentId != null">
        agent_id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="placeId != null">
        place_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="segment1 != null">
        segment1,
      </if>
      <if test="segment2 != null">
        segment2,
      </if>
      <if test="segment3 != null">
        segment3,
      </if>
      <if test="segment4 != null">
        segment4,
      </if>
      <if test="segment5 != null">
        segment5,
      </if>
      <if test="segment6 != null">
        segment6,
      </if>
      <if test="segment7 != null">
        segment7,
      </if>
      <if test="segment8 != null">
        segment8,
      </if>
      <if test="segment9 != null">
        segment9,
      </if>
      <if test="segment10 != null">
        segment10,
      </if>
      <if test="segment11 != null">
        segment11,
      </if>
      <if test="segment12 != null">
        segment12,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null">
        #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="placeId != null">
        #{placeId,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="segment1 != null">
        #{segment1,jdbcType=INTEGER},
      </if>
      <if test="segment2 != null">
        #{segment2,jdbcType=INTEGER},
      </if>
      <if test="segment3 != null">
        #{segment3,jdbcType=INTEGER},
      </if>
      <if test="segment4 != null">
        #{segment4,jdbcType=INTEGER},
      </if>
      <if test="segment5 != null">
        #{segment5,jdbcType=INTEGER},
      </if>
      <if test="segment6 != null">
        #{segment6,jdbcType=INTEGER},
      </if>
      <if test="segment7 != null">
        #{segment7,jdbcType=INTEGER},
      </if>
      <if test="segment8 != null">
        #{segment8,jdbcType=INTEGER},
      </if>
      <if test="segment9 != null">
        #{segment9,jdbcType=INTEGER},
      </if>
      <if test="segment10 != null">
        #{segment10,jdbcType=INTEGER},
      </if>
      <if test="segment11 != null">
        #{segment11,jdbcType=INTEGER},
      </if>
      <if test="segment12 != null">
        #{segment12,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.testConfig.db.mybatis.model.biz.PlaceHourStatisticsExample" resultType="java.lang.Long">
    select count(1) from place_hour_statistics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update place_hour_statistics
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.agentId != null">
        agent_id = #{record.agentId,jdbcType=VARCHAR},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.placeId != null">
        place_id = #{record.placeId,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.segment1 != null">
        segment1 = #{record.segment1,jdbcType=INTEGER},
      </if>
      <if test="record.segment2 != null">
        segment2 = #{record.segment2,jdbcType=INTEGER},
      </if>
      <if test="record.segment3 != null">
        segment3 = #{record.segment3,jdbcType=INTEGER},
      </if>
      <if test="record.segment4 != null">
        segment4 = #{record.segment4,jdbcType=INTEGER},
      </if>
      <if test="record.segment5 != null">
        segment5 = #{record.segment5,jdbcType=INTEGER},
      </if>
      <if test="record.segment6 != null">
        segment6 = #{record.segment6,jdbcType=INTEGER},
      </if>
      <if test="record.segment7 != null">
        segment7 = #{record.segment7,jdbcType=INTEGER},
      </if>
      <if test="record.segment8 != null">
        segment8 = #{record.segment8,jdbcType=INTEGER},
      </if>
      <if test="record.segment9 != null">
        segment9 = #{record.segment9,jdbcType=INTEGER},
      </if>
      <if test="record.segment10 != null">
        segment10 = #{record.segment10,jdbcType=INTEGER},
      </if>
      <if test="record.segment11 != null">
        segment11 = #{record.segment11,jdbcType=INTEGER},
      </if>
      <if test="record.segment12 != null">
        segment12 = #{record.segment12,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update place_hour_statistics
    set id = #{record.id,jdbcType=VARCHAR},
      agent_id = #{record.agentId,jdbcType=VARCHAR},
      project_id = #{record.projectId,jdbcType=VARCHAR},
      place_id = #{record.placeId,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      segment1 = #{record.segment1,jdbcType=INTEGER},
      segment2 = #{record.segment2,jdbcType=INTEGER},
      segment3 = #{record.segment3,jdbcType=INTEGER},
      segment4 = #{record.segment4,jdbcType=INTEGER},
      segment5 = #{record.segment5,jdbcType=INTEGER},
      segment6 = #{record.segment6,jdbcType=INTEGER},
      segment7 = #{record.segment7,jdbcType=INTEGER},
      segment8 = #{record.segment8,jdbcType=INTEGER},
      segment9 = #{record.segment9,jdbcType=INTEGER},
      segment10 = #{record.segment10,jdbcType=INTEGER},
      segment11 = #{record.segment11,jdbcType=INTEGER},
      segment12 = #{record.segment12,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.testConfig.db.mybatis.model.biz.PlaceHourStatistics">
    update place_hour_statistics
    <set>
      <if test="agentId != null">
        agent_id = #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="placeId != null">
        place_id = #{placeId,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="segment1 != null">
        segment1 = #{segment1,jdbcType=INTEGER},
      </if>
      <if test="segment2 != null">
        segment2 = #{segment2,jdbcType=INTEGER},
      </if>
      <if test="segment3 != null">
        segment3 = #{segment3,jdbcType=INTEGER},
      </if>
      <if test="segment4 != null">
        segment4 = #{segment4,jdbcType=INTEGER},
      </if>
      <if test="segment5 != null">
        segment5 = #{segment5,jdbcType=INTEGER},
      </if>
      <if test="segment6 != null">
        segment6 = #{segment6,jdbcType=INTEGER},
      </if>
      <if test="segment7 != null">
        segment7 = #{segment7,jdbcType=INTEGER},
      </if>
      <if test="segment8 != null">
        segment8 = #{segment8,jdbcType=INTEGER},
      </if>
      <if test="segment9 != null">
        segment9 = #{segment9,jdbcType=INTEGER},
      </if>
      <if test="segment10 != null">
        segment10 = #{segment10,jdbcType=INTEGER},
      </if>
      <if test="segment11 != null">
        segment11 = #{segment11,jdbcType=INTEGER},
      </if>
      <if test="segment12 != null">
        segment12 = #{segment12,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.testConfig.db.mybatis.model.biz.PlaceHourStatistics">
    update place_hour_statistics
    set agent_id = #{agentId,jdbcType=VARCHAR},
      project_id = #{projectId,jdbcType=VARCHAR},
      place_id = #{placeId,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      segment1 = #{segment1,jdbcType=INTEGER},
      segment2 = #{segment2,jdbcType=INTEGER},
      segment3 = #{segment3,jdbcType=INTEGER},
      segment4 = #{segment4,jdbcType=INTEGER},
      segment5 = #{segment5,jdbcType=INTEGER},
      segment6 = #{segment6,jdbcType=INTEGER},
      segment7 = #{segment7,jdbcType=INTEGER},
      segment8 = #{segment8,jdbcType=INTEGER},
      segment9 = #{segment9,jdbcType=INTEGER},
      segment10 = #{segment10,jdbcType=INTEGER},
      segment11 = #{segment11,jdbcType=INTEGER},
      segment12 = #{segment12,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <!-- 下面为自定义的sql -->
  <select id="sumHoursStatisticsByExample" parameterType="com.example.testConfig.db.mybatis.model.biz.PlaceHourStatisticsExample" resultMap="BaseResultMap">
    select
     type, 
     sum(segment1) as segment1,
     sum(segment2) as segment2, 
     sum(segment3) as segment3, 
     sum(segment4) as segment4, 
     sum(segment5) as segment5, 
     sum(segment6) as segment6, 
     sum(segment7) as segment7, 
     sum(segment8) as segment8, 
     sum(segment9) as segment9, 
     sum(segment10) as segment10, 
     sum(segment11) as segment11, 
     sum(segment12) as segment12      
    from place_hour_statistics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    group by type
  </select>
  
  <update id="updateByExampleSelectiveToAdd" parameterType="map">
    update place_hour_statistics
    <set>
      <if test="record.agentId != null">
        agent_id = #{record.agentId,jdbcType=VARCHAR},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.placeId != null">
        place_id = #{record.placeId,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.segment1 != null">
        segment1 = segment1 + #{record.segment1,jdbcType=INTEGER},
      </if>
      <if test="record.segment2 != null">
        segment2 = segment2 + #{record.segment2,jdbcType=INTEGER},
      </if>
      <if test="record.segment3 != null">
        segment3 = segment3 + #{record.segment3,jdbcType=INTEGER},
      </if>
      <if test="record.segment4 != null">
        segment4 = segment4 + #{record.segment4,jdbcType=INTEGER},
      </if>
      <if test="record.segment5 != null">
        segment5 = segment5 + #{record.segment5,jdbcType=INTEGER},
      </if>
      <if test="record.segment6 != null">
        segment6 = segment6 + #{record.segment6,jdbcType=INTEGER},
      </if>
      <if test="record.segment7 != null">
        segment7 = segment7 + #{record.segment7,jdbcType=INTEGER},
      </if>
      <if test="record.segment8 != null">
        segment8 = segment8 + #{record.segment8,jdbcType=INTEGER},
      </if>
      <if test="record.segment9 != null">
        segment9 = segment9 + #{record.segment9,jdbcType=INTEGER},
      </if>
      <if test="record.segment10 != null">
        segment10 = segment10 + #{record.segment10,jdbcType=INTEGER},
      </if>
      <if test="record.segment11 != null">
        segment11 = segment11 + #{record.segment11,jdbcType=INTEGER},
      </if>
      <if test="record.segment12 != null">
        segment12 = segment12 + #{record.segment12,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>