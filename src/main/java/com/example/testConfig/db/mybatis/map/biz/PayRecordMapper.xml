<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.testConfig.db.mybatis.mapper.biz.PayRecordMapper">
  <resultMap id="BaseResultMap" type="com.example.testConfig.db.mybatis.model.biz.PayRecord">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="charge_package_id" jdbcType="VARCHAR" property="chargePackageId" />
    <result column="charge_package_name" jdbcType="VARCHAR" property="chargePackageName" />
    <result column="charge_id" jdbcType="VARCHAR" property="chargeId" />
    <result column="charge_name" jdbcType="VARCHAR" property="chargeName" />
    <result column="project_id" jdbcType="VARCHAR" property="projectId" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="pay_time" jdbcType="BIGINT" property="payTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, charge_package_id, charge_package_name, charge_id, charge_name, project_id, project_name, 
    customer_name, remark, pay_time
  </sql>
  <select id="selectByExample" parameterType="com.example.testConfig.db.mybatis.model.biz.PayRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pay_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pay_record
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from pay_record
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.testConfig.db.mybatis.model.biz.PayRecordExample">
    delete from pay_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.testConfig.db.mybatis.model.biz.PayRecord">
    insert into pay_record (id, charge_package_id, charge_package_name, 
      charge_id, charge_name, project_id, 
      project_name, customer_name, remark, 
      pay_time)
    values (#{id,jdbcType=VARCHAR}, #{chargePackageId,jdbcType=VARCHAR}, #{chargePackageName,jdbcType=VARCHAR}, 
      #{chargeId,jdbcType=VARCHAR}, #{chargeName,jdbcType=VARCHAR}, #{projectId,jdbcType=VARCHAR}, 
      #{projectName,jdbcType=VARCHAR}, #{customerName,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{payTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.example.testConfig.db.mybatis.model.biz.PayRecord">
    insert into pay_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="chargePackageId != null">
        charge_package_id,
      </if>
      <if test="chargePackageName != null">
        charge_package_name,
      </if>
      <if test="chargeId != null">
        charge_id,
      </if>
      <if test="chargeName != null">
        charge_name,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="projectName != null">
        project_name,
      </if>
      <if test="customerName != null">
        customer_name,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="chargePackageId != null">
        #{chargePackageId,jdbcType=VARCHAR},
      </if>
      <if test="chargePackageName != null">
        #{chargePackageName,jdbcType=VARCHAR},
      </if>
      <if test="chargeId != null">
        #{chargeId,jdbcType=VARCHAR},
      </if>
      <if test="chargeName != null">
        #{chargeName,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null">
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.testConfig.db.mybatis.model.biz.PayRecordExample" resultType="java.lang.Long">
    select count(*) from pay_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pay_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.chargePackageId != null">
        charge_package_id = #{record.chargePackageId,jdbcType=VARCHAR},
      </if>
      <if test="record.chargePackageName != null">
        charge_package_name = #{record.chargePackageName,jdbcType=VARCHAR},
      </if>
      <if test="record.chargeId != null">
        charge_id = #{record.chargeId,jdbcType=VARCHAR},
      </if>
      <if test="record.chargeName != null">
        charge_name = #{record.chargeName,jdbcType=VARCHAR},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.projectName != null">
        project_name = #{record.projectName,jdbcType=VARCHAR},
      </if>
      <if test="record.customerName != null">
        customer_name = #{record.customerName,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pay_record
    set id = #{record.id,jdbcType=VARCHAR},
      charge_package_id = #{record.chargePackageId,jdbcType=VARCHAR},
      charge_package_name = #{record.chargePackageName,jdbcType=VARCHAR},
      charge_id = #{record.chargeId,jdbcType=VARCHAR},
      charge_name = #{record.chargeName,jdbcType=VARCHAR},
      project_id = #{record.projectId,jdbcType=VARCHAR},
      project_name = #{record.projectName,jdbcType=VARCHAR},
      customer_name = #{record.customerName,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      pay_time = #{record.payTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.testConfig.db.mybatis.model.biz.PayRecord">
    update pay_record
    <set>
      <if test="chargePackageId != null">
        charge_package_id = #{chargePackageId,jdbcType=VARCHAR},
      </if>
      <if test="chargePackageName != null">
        charge_package_name = #{chargePackageName,jdbcType=VARCHAR},
      </if>
      <if test="chargeId != null">
        charge_id = #{chargeId,jdbcType=VARCHAR},
      </if>
      <if test="chargeName != null">
        charge_name = #{chargeName,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null">
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.testConfig.db.mybatis.model.biz.PayRecord">
    update pay_record
    set charge_package_id = #{chargePackageId,jdbcType=VARCHAR},
      charge_package_name = #{chargePackageName,jdbcType=VARCHAR},
      charge_id = #{chargeId,jdbcType=VARCHAR},
      charge_name = #{chargeName,jdbcType=VARCHAR},
      project_id = #{projectId,jdbcType=VARCHAR},
      project_name = #{projectName,jdbcType=VARCHAR},
      customer_name = #{customerName,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      pay_time = #{payTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>