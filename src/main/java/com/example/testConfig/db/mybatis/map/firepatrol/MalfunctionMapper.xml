<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.testConfig.db.mybatis.mapper.firepatrol.MalfunctionMapper">
  <resultMap id="BaseResultMap" type="com.example.testConfig.db.mybatis.model.firepatrol.Malfunction">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="task_point_id" jdbcType="VARCHAR" property="taskPointId" />
    <result column="patrol_task_id" jdbcType="VARCHAR" property="patrolTaskId" />
    <result column="patrol_task_name" jdbcType="VARCHAR" property="patrolTaskName" />
    <result column="equ_name" jdbcType="VARCHAR" property="equName" />
    <result column="equ_code" jdbcType="VARCHAR" property="equCode" />
    <result column="fault_type" jdbcType="INTEGER" property="faultType" />
    <result column="fault_type_name" jdbcType="VARCHAR" property="faultTypeName" />
    <result column="fault_cause" jdbcType="VARCHAR" property="faultCause" />
    <result column="malfunction_des" jdbcType="VARCHAR" property="malfunctionDes" />
    <result column="dispose_state" jdbcType="VARCHAR" property="disposeState" />
    <result column="dispose_des" jdbcType="VARCHAR" property="disposeDes" />
    <result column="plan_type" jdbcType="INTEGER" property="planType" />
    <result column="plan_type_name" jdbcType="VARCHAR" property="planTypeName" />
    <result column="tag_number" jdbcType="VARCHAR" property="tagNumber" />
    <result column="company_id" jdbcType="VARCHAR" property="companyId" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="patrol_point_name" jdbcType="VARCHAR" property="patrolPointName" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, task_point_id, patrol_task_id, patrol_task_name, equ_name, equ_code, fault_type, 
    fault_type_name, fault_cause, malfunction_des, dispose_state, dispose_des, plan_type, 
    plan_type_name, tag_number, company_id, company_name, patrol_point_name, remark, 
    create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.example.testConfig.db.mybatis.model.firepatrol.MalfunctionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from malfunction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from malfunction
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from malfunction
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.testConfig.db.mybatis.model.firepatrol.MalfunctionExample">
    delete from malfunction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.testConfig.db.mybatis.model.firepatrol.Malfunction">
    insert into malfunction (id, task_point_id, patrol_task_id, 
      patrol_task_name, equ_name, equ_code, 
      fault_type, fault_type_name, fault_cause, 
      malfunction_des, dispose_state, dispose_des, 
      plan_type, plan_type_name, tag_number, 
      company_id, company_name, patrol_point_name, 
      remark, create_time, update_time
      )
    values (#{id,jdbcType=VARCHAR}, #{taskPointId,jdbcType=VARCHAR}, #{patrolTaskId,jdbcType=VARCHAR}, 
      #{patrolTaskName,jdbcType=VARCHAR}, #{equName,jdbcType=VARCHAR}, #{equCode,jdbcType=VARCHAR}, 
      #{faultType,jdbcType=INTEGER}, #{faultTypeName,jdbcType=VARCHAR}, #{faultCause,jdbcType=VARCHAR}, 
      #{malfunctionDes,jdbcType=VARCHAR}, #{disposeState,jdbcType=VARCHAR}, #{disposeDes,jdbcType=VARCHAR}, 
      #{planType,jdbcType=INTEGER}, #{planTypeName,jdbcType=VARCHAR}, #{tagNumber,jdbcType=VARCHAR}, 
      #{companyId,jdbcType=VARCHAR}, #{companyName,jdbcType=VARCHAR}, #{patrolPointName,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.testConfig.db.mybatis.model.firepatrol.Malfunction">
    insert into malfunction
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="taskPointId != null">
        task_point_id,
      </if>
      <if test="patrolTaskId != null">
        patrol_task_id,
      </if>
      <if test="patrolTaskName != null">
        patrol_task_name,
      </if>
      <if test="equName != null">
        equ_name,
      </if>
      <if test="equCode != null">
        equ_code,
      </if>
      <if test="faultType != null">
        fault_type,
      </if>
      <if test="faultTypeName != null">
        fault_type_name,
      </if>
      <if test="faultCause != null">
        fault_cause,
      </if>
      <if test="malfunctionDes != null">
        malfunction_des,
      </if>
      <if test="disposeState != null">
        dispose_state,
      </if>
      <if test="disposeDes != null">
        dispose_des,
      </if>
      <if test="planType != null">
        plan_type,
      </if>
      <if test="planTypeName != null">
        plan_type_name,
      </if>
      <if test="tagNumber != null">
        tag_number,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="companyName != null">
        company_name,
      </if>
      <if test="patrolPointName != null">
        patrol_point_name,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="taskPointId != null">
        #{taskPointId,jdbcType=VARCHAR},
      </if>
      <if test="patrolTaskId != null">
        #{patrolTaskId,jdbcType=VARCHAR},
      </if>
      <if test="patrolTaskName != null">
        #{patrolTaskName,jdbcType=VARCHAR},
      </if>
      <if test="equName != null">
        #{equName,jdbcType=VARCHAR},
      </if>
      <if test="equCode != null">
        #{equCode,jdbcType=VARCHAR},
      </if>
      <if test="faultType != null">
        #{faultType,jdbcType=INTEGER},
      </if>
      <if test="faultTypeName != null">
        #{faultTypeName,jdbcType=VARCHAR},
      </if>
      <if test="faultCause != null">
        #{faultCause,jdbcType=VARCHAR},
      </if>
      <if test="malfunctionDes != null">
        #{malfunctionDes,jdbcType=VARCHAR},
      </if>
      <if test="disposeState != null">
        #{disposeState,jdbcType=VARCHAR},
      </if>
      <if test="disposeDes != null">
        #{disposeDes,jdbcType=VARCHAR},
      </if>
      <if test="planType != null">
        #{planType,jdbcType=INTEGER},
      </if>
      <if test="planTypeName != null">
        #{planTypeName,jdbcType=VARCHAR},
      </if>
      <if test="tagNumber != null">
        #{tagNumber,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="patrolPointName != null">
        #{patrolPointName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.testConfig.db.mybatis.model.firepatrol.MalfunctionExample" resultType="java.lang.Long">
    select count(*) from malfunction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update malfunction
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.taskPointId != null">
        task_point_id = #{record.taskPointId,jdbcType=VARCHAR},
      </if>
      <if test="record.patrolTaskId != null">
        patrol_task_id = #{record.patrolTaskId,jdbcType=VARCHAR},
      </if>
      <if test="record.patrolTaskName != null">
        patrol_task_name = #{record.patrolTaskName,jdbcType=VARCHAR},
      </if>
      <if test="record.equName != null">
        equ_name = #{record.equName,jdbcType=VARCHAR},
      </if>
      <if test="record.equCode != null">
        equ_code = #{record.equCode,jdbcType=VARCHAR},
      </if>
      <if test="record.faultType != null">
        fault_type = #{record.faultType,jdbcType=INTEGER},
      </if>
      <if test="record.faultTypeName != null">
        fault_type_name = #{record.faultTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.faultCause != null">
        fault_cause = #{record.faultCause,jdbcType=VARCHAR},
      </if>
      <if test="record.malfunctionDes != null">
        malfunction_des = #{record.malfunctionDes,jdbcType=VARCHAR},
      </if>
      <if test="record.disposeState != null">
        dispose_state = #{record.disposeState,jdbcType=VARCHAR},
      </if>
      <if test="record.disposeDes != null">
        dispose_des = #{record.disposeDes,jdbcType=VARCHAR},
      </if>
      <if test="record.planType != null">
        plan_type = #{record.planType,jdbcType=INTEGER},
      </if>
      <if test="record.planTypeName != null">
        plan_type_name = #{record.planTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.tagNumber != null">
        tag_number = #{record.tagNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=VARCHAR},
      </if>
      <if test="record.companyName != null">
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.patrolPointName != null">
        patrol_point_name = #{record.patrolPointName,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update malfunction
    set id = #{record.id,jdbcType=VARCHAR},
      task_point_id = #{record.taskPointId,jdbcType=VARCHAR},
      patrol_task_id = #{record.patrolTaskId,jdbcType=VARCHAR},
      patrol_task_name = #{record.patrolTaskName,jdbcType=VARCHAR},
      equ_name = #{record.equName,jdbcType=VARCHAR},
      equ_code = #{record.equCode,jdbcType=VARCHAR},
      fault_type = #{record.faultType,jdbcType=INTEGER},
      fault_type_name = #{record.faultTypeName,jdbcType=VARCHAR},
      fault_cause = #{record.faultCause,jdbcType=VARCHAR},
      malfunction_des = #{record.malfunctionDes,jdbcType=VARCHAR},
      dispose_state = #{record.disposeState,jdbcType=VARCHAR},
      dispose_des = #{record.disposeDes,jdbcType=VARCHAR},
      plan_type = #{record.planType,jdbcType=INTEGER},
      plan_type_name = #{record.planTypeName,jdbcType=VARCHAR},
      tag_number = #{record.tagNumber,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=VARCHAR},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      patrol_point_name = #{record.patrolPointName,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.testConfig.db.mybatis.model.firepatrol.Malfunction">
    update malfunction
    <set>
      <if test="taskPointId != null">
        task_point_id = #{taskPointId,jdbcType=VARCHAR},
      </if>
      <if test="patrolTaskId != null">
        patrol_task_id = #{patrolTaskId,jdbcType=VARCHAR},
      </if>
      <if test="patrolTaskName != null">
        patrol_task_name = #{patrolTaskName,jdbcType=VARCHAR},
      </if>
      <if test="equName != null">
        equ_name = #{equName,jdbcType=VARCHAR},
      </if>
      <if test="equCode != null">
        equ_code = #{equCode,jdbcType=VARCHAR},
      </if>
      <if test="faultType != null">
        fault_type = #{faultType,jdbcType=INTEGER},
      </if>
      <if test="faultTypeName != null">
        fault_type_name = #{faultTypeName,jdbcType=VARCHAR},
      </if>
      <if test="faultCause != null">
        fault_cause = #{faultCause,jdbcType=VARCHAR},
      </if>
      <if test="malfunctionDes != null">
        malfunction_des = #{malfunctionDes,jdbcType=VARCHAR},
      </if>
      <if test="disposeState != null">
        dispose_state = #{disposeState,jdbcType=VARCHAR},
      </if>
      <if test="disposeDes != null">
        dispose_des = #{disposeDes,jdbcType=VARCHAR},
      </if>
      <if test="planType != null">
        plan_type = #{planType,jdbcType=INTEGER},
      </if>
      <if test="planTypeName != null">
        plan_type_name = #{planTypeName,jdbcType=VARCHAR},
      </if>
      <if test="tagNumber != null">
        tag_number = #{tagNumber,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="patrolPointName != null">
        patrol_point_name = #{patrolPointName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.testConfig.db.mybatis.model.firepatrol.Malfunction">
    update malfunction
    set task_point_id = #{taskPointId,jdbcType=VARCHAR},
      patrol_task_id = #{patrolTaskId,jdbcType=VARCHAR},
      patrol_task_name = #{patrolTaskName,jdbcType=VARCHAR},
      equ_name = #{equName,jdbcType=VARCHAR},
      equ_code = #{equCode,jdbcType=VARCHAR},
      fault_type = #{faultType,jdbcType=INTEGER},
      fault_type_name = #{faultTypeName,jdbcType=VARCHAR},
      fault_cause = #{faultCause,jdbcType=VARCHAR},
      malfunction_des = #{malfunctionDes,jdbcType=VARCHAR},
      dispose_state = #{disposeState,jdbcType=VARCHAR},
      dispose_des = #{disposeDes,jdbcType=VARCHAR},
      plan_type = #{planType,jdbcType=INTEGER},
      plan_type_name = #{planTypeName,jdbcType=VARCHAR},
      tag_number = #{tagNumber,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR},
      patrol_point_name = #{patrolPointName,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>