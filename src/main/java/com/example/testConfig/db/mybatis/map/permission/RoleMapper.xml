<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.testConfig.db.mybatis.mapper.permission.RoleMapper">
  <resultMap id="BaseResultMap" type="com.example.testConfig.db.mybatis.model.permission.Role">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="role_code" jdbcType="INTEGER" property="roleCode" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="module_code" jdbcType="INTEGER" property="moduleCode" />
    <result column="binding_id" jdbcType="VARCHAR" property="bindingId" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="user_count" jdbcType="INTEGER" property="userCount" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="i18n_code" jdbcType="CHAR" property="i18nCode" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
    <result column="allow_delete" jdbcType="BIT" property="allowDelete" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, role_code, role_name, module_code, binding_id, description, user_count, user_id, 
    i18n_code, deleted, allow_delete, create_time, update_time
  </sql>
  <select id="selectMaxRoleCode" resultType="java.lang.Integer">
  	select max(role_code) from role
  </select>
  <select id="selectByExample" parameterType="com.example.testConfig.db.mybatis.model.permission.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from role
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.testConfig.db.mybatis.model.permission.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.testConfig.db.mybatis.model.permission.Role">
    insert into role (id, role_code, role_name, 
      module_code, binding_id, description, 
      user_count, user_id, i18n_code, 
      deleted, allow_delete, create_time, 
      update_time)
    values (#{id,jdbcType=VARCHAR}, #{roleCode,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, 
      #{moduleCode,jdbcType=INTEGER}, #{bindingId,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{userCount,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{i18nCode,jdbcType=CHAR}, 
      #{deleted,jdbcType=BIT}, #{allowDelete,jdbcType=BIT}, #{createTime,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.example.testConfig.db.mybatis.model.permission.Role">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleCode != null">
        role_code,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="moduleCode != null">
        module_code,
      </if>
      <if test="bindingId != null">
        binding_id,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="userCount != null">
        user_count,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="i18nCode != null">
        i18n_code,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="allowDelete != null">
        allow_delete,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null">
        #{roleCode,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="moduleCode != null">
        #{moduleCode,jdbcType=INTEGER},
      </if>
      <if test="bindingId != null">
        #{bindingId,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="userCount != null">
        #{userCount,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="i18nCode != null">
        #{i18nCode,jdbcType=CHAR},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="allowDelete != null">
        #{allowDelete,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.testConfig.db.mybatis.model.permission.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.roleCode != null">
        role_code = #{record.roleCode,jdbcType=INTEGER},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.moduleCode != null">
        module_code = #{record.moduleCode,jdbcType=INTEGER},
      </if>
      <if test="record.bindingId != null">
        binding_id = #{record.bindingId,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.userCount != null">
        user_count = #{record.userCount,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.i18nCode != null">
        i18n_code = #{record.i18nCode,jdbcType=CHAR},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
      <if test="record.allowDelete != null">
        allow_delete = #{record.allowDelete,jdbcType=BIT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set id = #{record.id,jdbcType=VARCHAR},
      role_code = #{record.roleCode,jdbcType=INTEGER},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      module_code = #{record.moduleCode,jdbcType=INTEGER},
      binding_id = #{record.bindingId,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      user_count = #{record.userCount,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      i18n_code = #{record.i18nCode,jdbcType=CHAR},
      deleted = #{record.deleted,jdbcType=BIT},
      allow_delete = #{record.allowDelete,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.testConfig.db.mybatis.model.permission.Role">
    update role
    <set>
      <if test="roleCode != null">
        role_code = #{roleCode,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="moduleCode != null">
        module_code = #{moduleCode,jdbcType=INTEGER},
      </if>
      <if test="bindingId != null">
        binding_id = #{bindingId,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="userCount != null">
        user_count = #{userCount,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="i18nCode != null">
        i18n_code = #{i18nCode,jdbcType=CHAR},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="allowDelete != null">
        allow_delete = #{allowDelete,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.testConfig.db.mybatis.model.permission.Role">
    update role
    set role_code = #{roleCode,jdbcType=INTEGER},
      role_name = #{roleName,jdbcType=VARCHAR},
      module_code = #{moduleCode,jdbcType=INTEGER},
      binding_id = #{bindingId,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      user_count = #{userCount,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=VARCHAR},
      i18n_code = #{i18nCode,jdbcType=CHAR},
      deleted = #{deleted,jdbcType=BIT},
      allow_delete = #{allowDelete,jdbcType=BIT},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>