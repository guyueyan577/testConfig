<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.testConfig.db.mybatis.mapper.permission.UserOperateLogMapper">
  <resultMap id="BaseResultMap" type="com.example.testConfig.db.mybatis.model.permission.UserOperateLog">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_account" jdbcType="VARCHAR" property="userAccount" />
    <result column="operate_type" jdbcType="VARCHAR" property="operateType" />
    <result column="operate_object" jdbcType="VARCHAR" property="operateObject" />
    <result column="operate_id" jdbcType="VARCHAR" property="operateId" />
    <result column="operate_name" jdbcType="VARCHAR" property="operateName" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="module_code" jdbcType="INTEGER" property="moduleCode" />
    <result column="result" jdbcType="BIT" property="result" />
    <result column="type_code" jdbcType="INTEGER" property="typeCode" />
    <result column="object_code" jdbcType="INTEGER" property="objectCode" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, user_account, operate_type, operate_object, operate_id, operate_name, 
    create_time, module_code, result, type_code, object_code
  </sql>
  <select id="selectByExample" parameterType="com.example.testConfig.db.mybatis.model.permission.UserOperateLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_operate_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_operate_log
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user_operate_log
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.testConfig.db.mybatis.model.permission.UserOperateLogExample">
    delete from user_operate_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.testConfig.db.mybatis.model.permission.UserOperateLog">
    insert into user_operate_log (id, user_id, user_account, 
      operate_type, operate_object, operate_id, 
      operate_name, create_time, module_code, 
      result, type_code, object_code
      )
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{userAccount,jdbcType=VARCHAR}, 
      #{operateType,jdbcType=VARCHAR}, #{operateObject,jdbcType=VARCHAR}, #{operateId,jdbcType=VARCHAR}, 
      #{operateName,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, #{moduleCode,jdbcType=INTEGER}, 
      #{result,jdbcType=BIT}, #{typeCode,jdbcType=INTEGER}, #{objectCode,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.testConfig.db.mybatis.model.permission.UserOperateLog">
    insert into user_operate_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userAccount != null">
        user_account,
      </if>
      <if test="operateType != null">
        operate_type,
      </if>
      <if test="operateObject != null">
        operate_object,
      </if>
      <if test="operateId != null">
        operate_id,
      </if>
      <if test="operateName != null">
        operate_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="moduleCode != null">
        module_code,
      </if>
      <if test="result != null">
        result,
      </if>
      <if test="typeCode != null">
        type_code,
      </if>
      <if test="objectCode != null">
        object_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userAccount != null">
        #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="operateType != null">
        #{operateType,jdbcType=VARCHAR},
      </if>
      <if test="operateObject != null">
        #{operateObject,jdbcType=VARCHAR},
      </if>
      <if test="operateId != null">
        #{operateId,jdbcType=VARCHAR},
      </if>
      <if test="operateName != null">
        #{operateName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="moduleCode != null">
        #{moduleCode,jdbcType=INTEGER},
      </if>
      <if test="result != null">
        #{result,jdbcType=BIT},
      </if>
      <if test="typeCode != null">
        #{typeCode,jdbcType=INTEGER},
      </if>
      <if test="objectCode != null">
        #{objectCode,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.testConfig.db.mybatis.model.permission.UserOperateLogExample" resultType="java.lang.Long">
    select count(*) from user_operate_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_operate_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.userAccount != null">
        user_account = #{record.userAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.operateType != null">
        operate_type = #{record.operateType,jdbcType=VARCHAR},
      </if>
      <if test="record.operateObject != null">
        operate_object = #{record.operateObject,jdbcType=VARCHAR},
      </if>
      <if test="record.operateId != null">
        operate_id = #{record.operateId,jdbcType=VARCHAR},
      </if>
      <if test="record.operateName != null">
        operate_name = #{record.operateName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.moduleCode != null">
        module_code = #{record.moduleCode,jdbcType=INTEGER},
      </if>
      <if test="record.result != null">
        result = #{record.result,jdbcType=BIT},
      </if>
      <if test="record.typeCode != null">
        type_code = #{record.typeCode,jdbcType=INTEGER},
      </if>
      <if test="record.objectCode != null">
        object_code = #{record.objectCode,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_operate_log
    set id = #{record.id,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      user_account = #{record.userAccount,jdbcType=VARCHAR},
      operate_type = #{record.operateType,jdbcType=VARCHAR},
      operate_object = #{record.operateObject,jdbcType=VARCHAR},
      operate_id = #{record.operateId,jdbcType=VARCHAR},
      operate_name = #{record.operateName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      module_code = #{record.moduleCode,jdbcType=INTEGER},
      result = #{record.result,jdbcType=BIT},
      type_code = #{record.typeCode,jdbcType=INTEGER},
      object_code = #{record.objectCode,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.testConfig.db.mybatis.model.permission.UserOperateLog">
    update user_operate_log
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userAccount != null">
        user_account = #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="operateType != null">
        operate_type = #{operateType,jdbcType=VARCHAR},
      </if>
      <if test="operateObject != null">
        operate_object = #{operateObject,jdbcType=VARCHAR},
      </if>
      <if test="operateId != null">
        operate_id = #{operateId,jdbcType=VARCHAR},
      </if>
      <if test="operateName != null">
        operate_name = #{operateName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="moduleCode != null">
        module_code = #{moduleCode,jdbcType=INTEGER},
      </if>
      <if test="result != null">
        result = #{result,jdbcType=BIT},
      </if>
      <if test="typeCode != null">
        type_code = #{typeCode,jdbcType=INTEGER},
      </if>
      <if test="objectCode != null">
        object_code = #{objectCode,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.testConfig.db.mybatis.model.permission.UserOperateLog">
    update user_operate_log
    set user_id = #{userId,jdbcType=VARCHAR},
      user_account = #{userAccount,jdbcType=VARCHAR},
      operate_type = #{operateType,jdbcType=VARCHAR},
      operate_object = #{operateObject,jdbcType=VARCHAR},
      operate_id = #{operateId,jdbcType=VARCHAR},
      operate_name = #{operateName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      module_code = #{moduleCode,jdbcType=INTEGER},
      result = #{result,jdbcType=BIT},
      type_code = #{typeCode,jdbcType=INTEGER},
      object_code = #{objectCode,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>